{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst slice = createSlice({\n  name: 'dashboard',\n  initialState: {\n    categories: [],\n    isModalOpen: false,\n    activeCategoryId: null,\n    globalSearch: ''\n  },\n  reducers: {\n    initialize(state, action) {\n      const data = action.payload;\n      state.categories = data.categories.map(c => ({\n        ...c,\n        widgets: c.widgets.map(w => {\n          var _w$active;\n          return {\n            ...w,\n            active: (_w$active = w.active) !== null && _w$active !== void 0 ? _w$active : false\n          };\n        })\n      }));\n    },\n    setModalOpen(state, action) {\n      state.isModalOpen = action.payload.open;\n    },\n    setActiveCategory(state, action) {\n      state.activeCategoryId = action.payload;\n    },\n    addWidgets(state, action) {\n      const {\n        categoryId,\n        widgetIds\n      } = action.payload;\n      const cat = state.categories.find(c => c.id === categoryId);\n      if (!cat) return;\n      cat.widgets.forEach(w => {\n        if (widgetIds.includes(w.id)) {\n          w.active = true;\n        }\n      });\n    },\n    removeWidget(state, action) {\n      const {\n        categoryId,\n        widgetId\n      } = action.payload;\n      const cat = state.categories.find(c => c.id === categoryId);\n      if (!cat) return;\n      const w = cat.widgets.find(x => x.id === widgetId);\n      if (w) w.active = false;\n    },\n    setGlobalSearch(state, action) {\n      state.globalSearch = action.payload;\n    }\n  }\n});\nexport const {\n  initialize,\n  setModalOpen,\n  addWidgets,\n  removeWidget,\n  setActiveCategory,\n  setGlobalSearch\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","slice","name","initialState","categories","isModalOpen","activeCategoryId","globalSearch","reducers","initialize","state","action","data","payload","map","c","widgets","w","_w$active","active","setModalOpen","open","setActiveCategory","addWidgets","categoryId","widgetIds","cat","find","id","forEach","includes","removeWidget","widgetId","x","setGlobalSearch","actions","reducer"],"sources":["/Users/tamojitroy/Desktop/TAMOJIT ROY/cnapp-dashboard/src/store/dashboardSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'dashboard',\n  initialState: {\n    categories: [],\n    isModalOpen: false,\n    activeCategoryId: null,\n    globalSearch: ''\n  },\n  reducers: {\n    initialize(state, action){\n      const data = action.payload;\n      state.categories = data.categories.map(c=>({\n        ...c,\n        widgets: c.widgets.map(w=>({ ...w, active: (w.active ?? false) }))\n      }));\n    },\n    setModalOpen(state, action){\n      state.isModalOpen = action.payload.open;\n    },\n    setActiveCategory(state, action){\n      state.activeCategoryId = action.payload;\n    },\n    addWidgets(state, action){\n      const { categoryId, widgetIds } = action.payload;\n      const cat = state.categories.find(c=>c.id===categoryId);\n      if(!cat) return;\n      cat.widgets.forEach(w=>{\n        if(widgetIds.includes(w.id)){ w.active = true; }\n      });\n    },\n    removeWidget(state, action){\n      const { categoryId, widgetId } = action.payload;\n      const cat = state.categories.find(c=>c.id===categoryId);\n      if(!cat) return;\n      const w = cat.widgets.find(x=>x.id===widgetId);\n      if(w) w.active = false;\n    },\n    setGlobalSearch(state, action){\n      state.globalSearch = action.payload;\n    }\n  }\n});\n\nexport const { initialize, setModalOpen, addWidgets, removeWidget, setActiveCategory, setGlobalSearch } = slice.actions;\nexport default slice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,KAAK,GAAGD,WAAW,CAAC;EACxBE,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE,KAAK;IAClBC,gBAAgB,EAAE,IAAI;IACtBC,YAAY,EAAE;EAChB,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAACC,KAAK,EAAEC,MAAM,EAAC;MACvB,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO;MAC3BH,KAAK,CAACN,UAAU,GAAGQ,IAAI,CAACR,UAAU,CAACU,GAAG,CAACC,CAAC,KAAG;QACzC,GAAGA,CAAC;QACJC,OAAO,EAAED,CAAC,CAACC,OAAO,CAACF,GAAG,CAACG,CAAC;UAAA,IAAAC,SAAA;UAAA,OAAG;YAAE,GAAGD,CAAC;YAAEE,MAAM,GAAAD,SAAA,GAAGD,CAAC,CAACE,MAAM,cAAAD,SAAA,cAAAA,SAAA,GAAI;UAAO,CAAC;QAAA,CAAC;MACnE,CAAC,CAAC,CAAC;IACL,CAAC;IACDE,YAAYA,CAACV,KAAK,EAAEC,MAAM,EAAC;MACzBD,KAAK,CAACL,WAAW,GAAGM,MAAM,CAACE,OAAO,CAACQ,IAAI;IACzC,CAAC;IACDC,iBAAiBA,CAACZ,KAAK,EAAEC,MAAM,EAAC;MAC9BD,KAAK,CAACJ,gBAAgB,GAAGK,MAAM,CAACE,OAAO;IACzC,CAAC;IACDU,UAAUA,CAACb,KAAK,EAAEC,MAAM,EAAC;MACvB,MAAM;QAAEa,UAAU;QAAEC;MAAU,CAAC,GAAGd,MAAM,CAACE,OAAO;MAChD,MAAMa,GAAG,GAAGhB,KAAK,CAACN,UAAU,CAACuB,IAAI,CAACZ,CAAC,IAAEA,CAAC,CAACa,EAAE,KAAGJ,UAAU,CAAC;MACvD,IAAG,CAACE,GAAG,EAAE;MACTA,GAAG,CAACV,OAAO,CAACa,OAAO,CAACZ,CAAC,IAAE;QACrB,IAAGQ,SAAS,CAACK,QAAQ,CAACb,CAAC,CAACW,EAAE,CAAC,EAAC;UAAEX,CAAC,CAACE,MAAM,GAAG,IAAI;QAAE;MACjD,CAAC,CAAC;IACJ,CAAC;IACDY,YAAYA,CAACrB,KAAK,EAAEC,MAAM,EAAC;MACzB,MAAM;QAAEa,UAAU;QAAEQ;MAAS,CAAC,GAAGrB,MAAM,CAACE,OAAO;MAC/C,MAAMa,GAAG,GAAGhB,KAAK,CAACN,UAAU,CAACuB,IAAI,CAACZ,CAAC,IAAEA,CAAC,CAACa,EAAE,KAAGJ,UAAU,CAAC;MACvD,IAAG,CAACE,GAAG,EAAE;MACT,MAAMT,CAAC,GAAGS,GAAG,CAACV,OAAO,CAACW,IAAI,CAACM,CAAC,IAAEA,CAAC,CAACL,EAAE,KAAGI,QAAQ,CAAC;MAC9C,IAAGf,CAAC,EAAEA,CAAC,CAACE,MAAM,GAAG,KAAK;IACxB,CAAC;IACDe,eAAeA,CAACxB,KAAK,EAAEC,MAAM,EAAC;MAC5BD,KAAK,CAACH,YAAY,GAAGI,MAAM,CAACE,OAAO;IACrC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,UAAU;EAAEW,YAAY;EAAEG,UAAU;EAAEQ,YAAY;EAAET,iBAAiB;EAAEY;AAAgB,CAAC,GAAGjC,KAAK,CAACkC,OAAO;AACvH,eAAelC,KAAK,CAACmC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}